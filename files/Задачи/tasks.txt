
//-------------------------------------------------------
//-------------------------------------------------------

// ES5 PROTO
function Person(name) {
    this.name = name;
}
Person.prototype.getName = function() {
      return this.name;
}


function Man(name, hair) {
    Person.call(this, name);
    this.hair = hair;
}
Man.prototype = Object.create(Person.prototype);


Man.prototype.getHair = function() {
      return this.hair;
}
Man.prototype.getName = function() {
    //Person.prototype.getName.call(this, name);
  return `Name: ${this.name}`;
}
let man = new Man('Z', 'black');


man.getName();


//-------------------------------------------------------
//-------------------------------------------------------

JS Flat
var arr = [[1, 2], [1, [2]]];
//console.log(arr.flat(1));
//console.log(arr.reduce((acc, value) => acc.concat(value)))
// function flattenDeep(arr1) {
//    return arr1.reduce((acc, val) => Array.isArray(val) ? acc.concat(flattenDeep(val)) : acc.concat(val), []);
// }
console.log(flattenDeep(arr));


//-------------------------------------------------------
//-------------------------------------------------------

https://learn.javascript.ru/task/debounce

//-------------------------------------------------------
//-------------------------------------------------------
var todo = {
  finished: true,
  tasks: [
    { task: 'Read book', done: true },
    { task: 'Walk', done: false }
  ],
  getFinished() {
    return this.tasks.filter(function(item){
      return item.done === this.finished;
    });
  }
};
console.log(todo.getFinished())


//-------------------------------------------------------
//-------------------------------------------------------
// анаграммы
var input = [
	"вертикаль",
	"кильватер",
	"апельсин",
	"спаниель",
	"австралопитек",
	"ватерполистка",
	"кластер",
	"сталкер",
	"стрелка"
];
// Результат:
[
	["вертикаль", "кильватер"],
	["апельсин", "спаниель"],
	["австралопитек", "ватерполистка"],
	["кластер", "сталкер", "стрелка"]
]


//-------------------------------------------------------
//-------------------------------------------------------
function sum(a, b) {
  return a + b;
}
function mul(a, b) {
  return a * b;
}
function myFunc(func){
  // ...
}
console.info(myFunc(sum)(2)(3)); // => 5
console.info(myFunc(mul)(2)(3)); // => 6

//-------------------------------------------------------
//-------------------------------------------------------
var a = 1;

function foo() {
  consоle.log(a);
}
functiоn foo2() {
  var a = 2;
  foo.call(foow);
}
fоo2();

//-------------------------------------------------------
//-------------------------------------------------------
var obj = {
    getProp: funсtion(){
         сonsole.log(this.prop);
    },
    prop: 1
};

obj.getProp.prop = 2;
obj.getProp(); // ?
var fn = obj.getProp;
fn(); // ?

//-------------------------------------------------------
//-------------------------------------------------------
var obj = {
    getProp: funсtion(){
         сonsole.log(this.prop);
    },
    prop: 1
};

obj.getProp.prop = 2;
obj.getProp(); // ?
var fn = obj.getProp;
fn(); // ?
